{
    "initiator": {
        "role": "guest",
        "party_id": 9999
    },
    "job_parameters": {
        "work_mode": 0
    },
    "role": {
        "guest": [9999],
        "host": [9998],
        "arbiter": [10000]
    },
    "role_parameters": {
        "guest": {
            "args": {
                "data": {
                    "train_data": [{
                      "name": "heart_nonscaled_hetero_guest",
                      "namespace": "experiment"}],
                    "eval_data": [{
                      "name": "heart_nonscaled_hetero_test",
                      "namespace": "experiment"}]
                }
            },
	        "dataio_0":{
    	        "with_label": [true],
        	    "label_name": ["target"],
            	"label_type": ["int"],
            	"output_format": ["dense"]
        	},
        	"dataio_1":{
    	        "with_label": [true],
        	    "label_name": ["target"],
            	"label_type": ["int"],
            	"output_format": ["dense"]
        	},
        	"sampler_0":{
        	    "method": ["downsample"], 
        	    "mode": ["stratified"],
        	    "fractions": [[[0,1],[1,0.6]]], 
        	    "task_type": ["homo"],
        	    "random_state": [1234]
        	} ,    
        	"feature_scale_0": {
        		"method": ["min_max_scale"],
        		"area": ["col"],
        		"scale_col_indexes": [[0,3,4,7,9]]
      		},
      		"feature_scale_1": {
        		"method": ["min_max_scale"],
        		"area": ["col"],
        		"scale_col_indexes": [[0,3,4,7,9]]
      		},
            "evaluation_0": {
                "eval_type": ["binary"],
        		"pos_label": [1], 
        		"need_run": [true]
            }, 
            "evaluation_1": {
                "eval_type": ["binary"],
        		"pos_label": [1]
            }
        },
        "host": {
            "args": {
                "data": {
                    "train_data": [
                      {"name": "heart_nonscaled_hetero_host",
                        "namespace": "experiment"}],
                    "eval_data": [
                      {"name": "heart_nonscaled_hetero_host",
                        "namespace": "experiment"}]
                }
            },
	        "dataio_0":{
    	        "with_label": [true],
        	    "label_name": ["target"],
            	"label_type": ["int"],
            	"output_format": ["dense"]
        	}, 
        	"dataio_1":{
    	        "need_run": [false]
        	},
        	"sampler_0":{
        	    "mode":["stratified"],
        	    "method": ["downsample"], 
        	    "task_type": ["homo"],
        	    "fractions": [[[0, 1], [1, 0.5]]], 
        	    "random_state": [1234]
        	} ,
            "feature_scale_0": {
            	"need_run": [true],
        		"method": ["min_max_scale"],
        		"area": ["col"],
        		"scale_col_indexes": [[0,3,4,7,9]]
      		},
            "evaluation_0": {
                "need_run": [false],
                "eval_type": ["binary"],
        		"pos_label": [1]
            },
            "evaluation_1": {
                "need_run": [false]
            }
        }
    },
    "algorithm_parameters": {		
      	"aligner_0":{
      		"transform_col_indexes": [1,2,5,6,8,10,11,12],
      		"transform_col_names": [],
      		"need_run": true,
      		"need_alignment": true,
      		"encrypt_param": {
                "method": "Paillier", 
                "need_run": true
            }
      	},      		
      	"aligner_1":{
      		"transform_col_indexes": [1,2,5,6,8,10,11,12],
      		"transform_col_names": [],
      		"need_run": true,
      		"need_alignment": true,
      		"encrypt_param": {
                "method": "Paillier", 
                "need_run": true
            }
      	},
        "homo_lr_0": {
            "penalty": "L2",
            "optimizer": "sgd",
            "eps": 1e-5,
            "alpha": 0.01,
            "max_iter": 4,
            "aggregate_iters": 2,
            "converge_func": "diff",
            "batch_size": 300,
            "learning_rate": 0.2,
            "decay": 0.2,
            "decay_sqrt": true,
            "mu":0.01,
            "init_param": {
				"init_method": "random_normal"
            },
            "encrypt_param": {
                "method": "Paillier", 
                "need_run": true
            },
            "cv_param": {
                "n_splits": 4,
                "shuffle": true,
                "random_seed": 1028,
                "need_cv": false
            }
        }
    }
}
